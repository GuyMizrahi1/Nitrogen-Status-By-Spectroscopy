Make sklearn models inherit base model class

Example for XGBoostModel:
# class XGBModel(BaseModel):
    def __init__(self, dataset,param_grid=None, is_multi_output=False,target_variable_name=None):
        if is_multi_output:
            model = MultiOutputRegressor(XGBRegressor())
        else:
            model = XGBRegressor()
        super().__init__(dataset, model, param_grid, is_multi_output,target_variable_name)

Example for RandomForestModel:

class RFModel(BaseModel):

    def __init__(self, dataset,param_grid=None, is_multi_output=False,target_variable_name=None):
        if is_multi_output:
            model = MultiOutputRegressor(RandomForestRegressor())
        else:
            model = RandomForestRegressor()
        super().__init__(dataset, model, param_grid, is_multi_output,target_variable_name)


Example for PLSR Model:

class PLSRModel(BaseModel):

    def __init__(self, dataset,param_grid=None, is_multi_output=False,target_variable_name=None):
        if is_multi_output:
            model = MultiOutputRegressor(PLSRegression())
        else:
            model = PLSRegression()
        super().__init__(dataset, model, param_grid, is_multi_output,target_variable_name)

